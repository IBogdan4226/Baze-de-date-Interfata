-- Generated by Oracle SQL Developer Data Modeler 21.2.0.183.1957
--   at:        2022-01-01 16:47:42 EET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE cazare (
    persoane_id_primit NUMBER(6) NOT NULL,
    nr_pat             NUMBER(2) NOT NULL,
    data_cazarii       DATE DEFAULT sysdate NOT NULL
)
LOGGING;

ALTER TABLE cazare
    ADD CONSTRAINT check_nrpat CHECK ( nr_pat BETWEEN 1 AND 20 );

ALTER TABLE cazare
    ADD CONSTRAINT cazare_pk PRIMARY KEY ( nr_pat,
                                           data_cazarii,
                                           persoane_id_primit );

ALTER TABLE cazare ADD CONSTRAINT cazare_nr_pat_data_cazarii_un UNIQUE ( nr_pat,
                                                                         data_cazarii );

CREATE TABLE detalii_persoane (
    persoane_id_primit NUMBER(6) NOT NULL,
    cnp                NUMBER(13) NOT NULL,
    orasul_natal       VARCHAR2(20) NOT NULL,
    tip_de_sange       VARCHAR2(2) NOT NULL
)
LOGGING;

ALTER TABLE detalii_persoane
    ADD CONSTRAINT check_cnp CHECK ( REGEXP_LIKE ( cnp,
                                                   '^[1-9]\d{2}(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])(0[1-9]|[1-4]\d|5[0-2]|99)(00[1-9]|0[1-9]\d|[1-9]\d\d)\d$' ) );

ALTER TABLE detalii_persoane
    ADD CONSTRAINT check_oras_natal CHECK ( length(orasul_natal) > 2
                                            AND REGEXP_LIKE ( orasul_natal,
                                                              '^[A-Za-z]+$' ) );

ALTER TABLE detalii_persoane
    ADD CONSTRAINT check_tip_sange CHECK ( tip_de_sange IN ( 'A', 'AB', 'B', 'O' ) );

CREATE UNIQUE INDEX detalii_persoane__idx ON
    detalii_persoane (
        persoane_id_primit
    ASC )
        LOGGING;

ALTER TABLE detalii_persoane ADD CONSTRAINT detalii_persoane_pk PRIMARY KEY ( cnp,
                                                                              persoane_id_primit );

CREATE TABLE istoric_medical (
    persoane_id_primit      NUMBER(6) NOT NULL,
    denumire_afectiune      VARCHAR2(50),
    medicatie_necesara      VARCHAR2(50),
    data_incepere_tratament DATE
)
LOGGING;

ALTER TABLE istoric_medical
    ADD CONSTRAINT check_denumire_af CHECK ( length(denumire_afectiune) >= 2 );

ALTER TABLE istoric_medical
    ADD CONSTRAINT check_medicatie CHECK ( length(medicatie_necesara) >= 2 );

CREATE TABLE observatii (
    fapta_savarsita     VARCHAR2(100),
    gravitate_abatere   NUMBER(2),
    cazare_nr_pat       NUMBER(2) NOT NULL,
    cazare_data_cazarii DATE NOT NULL,
    cazare_id_primit    NUMBER(6) NOT NULL
)
LOGGING;

ALTER TABLE observatii
    ADD CONSTRAINT check_fapta_sav CHECK ( length(fapta_savarsita) > 3 );

ALTER TABLE observatii
    ADD CONSTRAINT check_gravitate CHECK ( gravitate_abatere BETWEEN 1 AND 10 );

CREATE UNIQUE INDEX observatii__idx ON
    observatii (
        cazare_nr_pat
    ASC,
        cazare_data_cazarii
    ASC,
        cazare_id_primit
    ASC )
        LOGGING;

CREATE TABLE persoane (
    id_primit NUMBER(6) NOT NULL,
    nume      VARCHAR2(40) NOT NULL,
    prenume   VARCHAR2(40)
)
LOGGING;

ALTER TABLE persoane
    ADD CONSTRAINT check_nume CHECK ( length(nume) > 2
                                      AND REGEXP_LIKE ( nume,
                                                        '^[A-Za-z]+$' ) );

ALTER TABLE persoane
    ADD CHECK ( length(prenume) > 2
                AND REGEXP_LIKE ( prenume,
                                  '^[A-Za-z]+$' ) );

ALTER TABLE persoane ADD CONSTRAINT persoane_pk PRIMARY KEY ( id_primit );

ALTER TABLE cazare
    ADD CONSTRAINT cazare_persoane_fk FOREIGN KEY ( persoane_id_primit )
        REFERENCES persoane ( id_primit )
    NOT DEFERRABLE;

ALTER TABLE detalii_persoane
    ADD CONSTRAINT detalii_persoane_persoane_fk FOREIGN KEY ( persoane_id_primit )
        REFERENCES persoane ( id_primit )
    NOT DEFERRABLE;

ALTER TABLE istoric_medical
    ADD CONSTRAINT istoric_medical_persoane_fk FOREIGN KEY ( persoane_id_primit )
        REFERENCES persoane ( id_primit )
    NOT DEFERRABLE;

ALTER TABLE observatii
    ADD CONSTRAINT observatii_cazare_fk FOREIGN KEY ( cazare_nr_pat,
                                                      cazare_data_cazarii,
                                                      cazare_id_primit )
        REFERENCES cazare ( nr_pat,
                            data_cazarii,
                            persoane_id_primit )
    NOT DEFERRABLE;

CREATE OR REPLACE TRIGGER cazare_abatere 
    BEFORE INSERT OR UPDATE ON Cazare 
    FOR EACH ROW 
declare
worst_grade number(2);
BEGIN
select max(gravitate_abatere)
    into worst_grade
    from Observatii
    where :new.Persoane_id_primit=Observatii.Cazare_ID_Primit;
IF( worst_grade>7 )
THEN
RAISE_APPLICATION_ERROR( -20001,
'Persoana cu id-ul ' ||  :new.Persoane_id_primit || ' are interdictie.' );
END IF;
END; 
/

CREATE OR REPLACE TRIGGER cazare_data1 
    BEFORE INSERT OR UPDATE ON Cazare 
    FOR EACH ROW 
BEGIN
	IF( :new.Data_Cazarii > SYSDATE )
	THEN
		RAISE_APPLICATION_ERROR( -20001,
			'Data invalida: ' || TO_CHAR( :new.Data_Cazarii, 'DD.MM.YYYY HH24:MI:SS' ) || ' trebuie sa fie mai mica decat data curenta.' );
	END IF;
END; 
/

CREATE OR REPLACE TRIGGER trg_cazare2 
    BEFORE INSERT ON Cazare 
    FOR EACH ROW 
declare
last_cazare_date date;
BEGIN
select max(Data_cazarii)
    into last_cazare_date
    from Cazare
    where :new.Persoane_id_primit=Cazare.Persoane_id_primit;
IF( :new.Data_Cazarii <last_cazare_date+1 )
THEN
RAISE_APPLICATION_ERROR( -20001,
'Data invalida: ' || TO_CHAR( :new.Data_Cazarii, 'DD.MM.YYYY HH24:MI:SS' ) || ' Nu a trecut o zi.' );
END IF;
END; 
/

CREATE OR REPLACE TRIGGER trg_istoric_med 
    BEFORE INSERT OR UPDATE ON Istoric_medical 
    FOR EACH ROW 
BEGIN
	IF( :new.Data_incepere_tratament > SYSDATE )
	THEN
		RAISE_APPLICATION_ERROR( -20001,
			'Data invalida: ' || TO_CHAR( :new.Data_incepere_tratament, 'DD.MM.YYYY HH24:MI:SS' ) || ' trebuie sa fie mai mica decat data curenta.' );
	END IF;
END; 
/

CREATE SEQUENCE persoane_id_primit_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER persoane_id_primit_trg BEFORE
    INSERT ON persoane
    FOR EACH ROW
    WHEN ( new.id_primit IS NULL )
BEGIN
    :new.id_primit := persoane_id_primit_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             5
-- CREATE INDEX                             2
-- ALTER TABLE                             18
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           5
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          1
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
